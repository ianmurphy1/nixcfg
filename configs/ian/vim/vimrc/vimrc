if &term == "xterm-kitty"
  set term=kitty
else
  set term=xterm-256color
endif

"
"
" These dirs are created by systemds tmpfiles
" creation of these hasn't been implemented on
" mac yet so expect errors
"
"
set backupdir=~/.vimextra/backup//
set directory=~/.vimextra/swap//

set nocompatible 
filetype plugin indent on
set backspace=indent,eol,start
set encoding=UTF-8
set background=dark
syntax enable

if !exists("g:os")
  if has("win64") || has("win32") || has("win16")
    let g:os = "Windows"
  else
    let g:os = substitute(system('uname'), '\n', '', '')
  endif
endif
if has("mouse_sgr")
  set ttymouse=sgr
else
  set ttymouse=xterm2
end
set mouse=a
let NERDTreeShowHidden=1
let g:airline_powerline_fonts=1
"set guifont=Inconsolata\ for\ Powerline:h16
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

"let g:jellybeans_overrides = {
"\    'background': { 'ctermbg': 'none', '256ctermbg': 'none' },
"\}
"if has('termguicolors') && &termguicolors
"    let g:jellybeans_overrides['background']['guibg'] = 'none'
"endif

" unicode symbols
"let g:airline_left_sep = '»'
"let g:airline_left_sep = '▶'
"let g:airline_right_sep = '«'
"let g:airline_right_sep = '◀'
"let g:airline_symbols.linenr = '␊'
"let g:airline_symbols.linenr = '␤'
"let g:airline_symbols.linenr = '¶'
"let g:airline_symbols.branch = '⎇'
"let g:airline_symbols.paste = 'ρ'
"let g:airline_symbols.paste = 'Þ'
"let g:airline_symbols.paste = '∥'
"let g:airline_symbols.whitespace = 'Ξ'
"
"" airline symbols
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''
"let g:airline_symbols.branch = ''
"let g:airline_symbols.readonly = ''
"let g:airline_symbols.linenr = ''


let g:airline_symbols.space="\ua0"
let g:airline_skip_empty_sections=1
let g:Powerline_symbols ='fancy'
set encoding=utf-8
set t_Co=256
set termencoding=utf-8
set laststatus=2
"let g:gruvbox_contrast_dark = 'hard'
"colorscheme gruvbox
"let g:airline_theme='gruvbox'
colorscheme jellybeans
let g:airline_theme='jellybeans'

" Disable arrows for navigation
no <down> ddp
no <left> <Nop>
no <right> <Nop>
no <up> ddkP
"

" Setup <Space> as <Leader> key
"
nnoremap <Space> <Nop>
map <Space> <Leader>


set updatetime=400
set splitright
set tabstop=4
set shiftwidth=4

autocmd FileType javascript setlocal shiftwidth=4 tabstop=4 expandtab path+=node_modules
autocmd FileType typescript setlocal shiftwidth=2 tabstop=2 expandtab path+=node_modules
autocmd FileType json setlocal shiftwidth=2 tabstop=2 expandtab
autocmd FileType html setlocal shiftwidth=2 tabstop=2
autocmd FileType sql setlocal shiftwidth=2 tabstop=2 expandtab
autocmd FileType yaml setlocal shiftwidth=2 tabstop=2 expandtab
autocmd FileType vim setlocal shiftwidth=2 tabstop=2 expandtab
autocmd FileType go setlocal shiftwidth=4 tabstop=4 expandtab
autocmd FileType python setlocal shiftwidth=4 tabstop=4 noexpandtab

augroup filetypedetect
  autocmd BufNew,BufNewFile,BufRead *.tofu :setfiletype terraform
  autocmd BufNew,BufNewFile,BufRead *.jsonc :setfiletype json
augroup END

map <silent> <C-o> :NERDTreeToggle<CR>
" Start NERDTree and put the cursor back in the other window.
"autocmd VimEnter * NERDTree | wincmd p

let g:sql_set_type_default = 'pgsql'

:set number relativenumber

:augroup numbertoggle
  :  autocmd!
  :  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  :  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END

noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>Y "+y
noremap <Leader>P "+p

highlight clear SignColumn

" disable fmt on save
let g:go_fmt_autosave = 0

let g:gitgutter_terminal_reports_focus=0

" Fix for NERDTree menu stuck in expanded mode after copying/moving files/dirs
" in the NERDTree's context menu
" let g:NERDTreeMinimalMenu=1

" Settings for the linux styling plugin
let g:linuxsty_patterns = [ "/home/ian/dev/kernel" ]

let g:vimtex_compiler_method = "latexmk"
let g:vimtex_view_method = 'zathura'
let g:vimtex_compiler_latexmk = {
      \ 'aux_dir' : '',
      \ 'out_dir' : '',
      \ 'callback' : 1,
      \ 'continuous' : 1,
      \ 'executable' : 'latexmk',
      \ 'hooks' : [],
      \ 'options' : [
      \   '-xelatex',
      \   '-verbose',
      \   '-file-line-error',
      \   '-synctex=1',
      \   '-interaction=nonstopmode',
      \ ],
      \}

" Toggle hybrid or absolute number lines
function! NumberToggle()
  if(&rnu == 1)
  set nornu
  else
    set rnu
  endif
endfunction

nnoremap <silent> <C-n> :call NumberToggle()<CR>

source ~/.vim/nerdtree-icons.vim
source ~/.vim/coc-settings.vim
source ~/test.vim
